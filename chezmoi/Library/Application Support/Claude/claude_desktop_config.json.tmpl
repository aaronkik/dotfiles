{{- $workServers := dict -}}
{{- if eq .isWorkComputer true -}}
  {{- $workServers = dict
    "circleci-mcp-server" (dict
      "args" (list "-y" "@circleci/mcp-server-circleci")
      "command" "npx"
      "env" (dict "CIRCLECI_TOKEN" .circleciPATToken)
    )
    "Prisma" (dict
      "args" (list "-y" "prisma" "mcp")
      "command" "npx"
    )
  -}}
{{- end -}}

{{- $baseServers := dict
  "github" (dict
    "args" (list "run" "-i" "--rm" "-e" "GITHUB_PERSONAL_ACCESS_TOKEN" "ghcr.io/github/github-mcp-server")
    "command" "docker"
    "env" (dict "GITHUB_PERSONAL_ACCESS_TOKEN" .claudeGitHubPAT)
  )
  "awslabs-aws-api-mcp-server" (dict
    "args" (list "awslabs.aws-api-mcp-server@latest")
    "autoApprove" (list)
    "command" "uvx"
    "disabled" false
    "env" (dict "FASTMCP_LOG_LEVEL" "ERROR")
  )
  "awslabs-cdk-mcp-server" (dict
    "args" (list "awslabs.cdk-mcp-server@latest")
    "autoApprove" (list)
    "command" "uvx"
    "disabled" false
    "env" (dict "FASTMCP_LOG_LEVEL" "ERROR")
  )
  "awslabs-cost-explorer-mcp-server" (dict
    "args" (list "awslabs.cost-explorer-mcp-server@latest")
    "autoApprove" (list)
    "command" "uvx"
    "disabled" false
    "env" (dict "FASTMCP_LOG_LEVEL" "ERROR")
  )
  "awslabs-cloudwatch-mcp-server" (dict
    "args" (list "awslabs.cloudwatch-mcp-server@latest")
    "autoApprove" (list)
    "command" "uvx"
    "disabled" false
    "env" (dict "FASTMCP_LOG_LEVEL" "ERROR")
    "transportType" "stdio"
  )
  "awslabs-amazon-sns-sqs-mcp-server" (dict
    "args" (list "awslabs.amazon-sns-sqs-mcp-server@latest")
    "command" "uvx"
    "env" (dict "FASTMCP_LOG_LEVEL" "ERROR")
  )
  "awslabs-cfn-mcp-server" (dict
    "args" (list "awslabs.cfn-mcp-server@latest")
    "autoApprove" (list)
    "command" "uvx"
    "disabled" false
  )
  "awslabs-dynamodb-mcp-server" (dict
    "args" (list "awslabs.dynamodb-mcp-server@latest")
    "autoApprove" (list)
    "command" "uvx"
    "disabled" false
    "env" (dict "DDB-MCP-READONLY" "true" "FASTMCP_LOG_LEVEL" "ERROR")
  )
  "awslabs-s3-tables-mcp-server" (dict
    "args" (list "awslabs.s3-tables-mcp-server@latest")
    "command" "uvx"
  )
  "awslabs-aws-pricing-mcp-server" (dict
    "args" (list "awslabs.aws-pricing-mcp-server@latest")
    "autoApprove" (list)
    "command" "uvx"
    "disabled" false
    "env" (dict "FASTMCP_LOG_LEVEL" "ERROR")
  )
  "Context7" (dict
    "args" (list "-y" "@upstash/context7-mcp")
    "command" "npx"
  )
   "eslint" (dict
     "args" (list "@eslint/mcp@latest")
     "command" "npx"
     "env" (dict)
   )
  "awslabs-aws-documentation-mcp-server" (dict
    "args" (list "awslabs.aws-documentation-mcp-server@latest")
    "autoApprove" (list)
    "command" "uvx"
    "disabled" false
    "env" (dict
      "FASTMCP_LOG_LEVEL" "ERROR"
      "AWS_DOCUMENTATION_PARTITION" "aws"
    )
  )
-}}

{{
  dict
    "mcpServers" (merge $baseServers $workServers)
    "preferences" (dict
      "menuBarEnabled" false
    )
  | toPrettyJson
}}
